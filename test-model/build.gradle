/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */
 
buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	
	dependencies {
		classpath 'hiconic.devrock.gradle:hiconic-plugin:1.0.1'
	}
}

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'eclipse'
}

group = "hiconic.devrock.gradle"
version = "1.0.1"

ext {
	archetype = 'model'
}

apply plugin: 'hiconic'

ext.hic = password -> {
	return {
        url 'https://maven.pkg.github.com/hiconic-os/maven-repo-dev'
        credentials {
			username 'ignored'
	        password password 
	    }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    
    // maven mavenHiconicDev(System.getenv('GITHUB_READ_PACKAGES_TOKEN'))
    
    maven hic(System.getenv('GITHUB_READ_PACKAGES_TOKEN'))

/*    
    maven {
        url 'https://maven.pkg.github.com/hiconic-os/maven-repo-dev'
        credentials {
			username 'ignored'
	        password 
	    }
    }
   */
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

dependencies {
    implementation "com.braintribe.gm:root-model:[2.0,2.1)"
    implementation "com.braintribe.gm:service-api-model:[2.0,2.1)"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}